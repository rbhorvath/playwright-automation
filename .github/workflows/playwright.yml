name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering
  schedule:
    # Runs at 9:00 UTC every day (6:00 AM Brazil time)
    - cron: '0 9 * * *'

jobs:
  test:
    name: 'Playwright Tests'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Starting test pipeline
        run: echo "::group::Pipeline initialization" && echo "Starting test execution pipeline $(date)" && echo "::endgroup::"
        
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        run: echo "::group::Setting up Node.js" && echo "Installing Node.js and configuring environment" && echo "::endgroup::"
        
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          echo "::group::Installing dependencies"
          echo "Running npm ci to install exact versions from package-lock.json"
          npm ci
          echo "Dependencies installed successfully"
          echo "::endgroup::"
      
      - name: Install Playwright browsers
        run: |
          echo "::group::Installing Playwright browsers"
          echo "Installing required browsers with dependencies"
          npx playwright install --with-deps
          echo "Browsers installed successfully"
          echo "::endgroup::"
      
      - name: Run Playwright tests
        run: |
          echo "::group::Running tests"
          echo "Starting test execution at $(date)"
          echo "Running with command: npm run test:verbose"
          npm run test:verbose
          echo "Tests completed at $(date)"
          echo "::endgroup::"
        env:
          CI: true
          DEBUG: pw:api
        continue-on-error: true
      
      - name: Process test results
        if: always()
        run: |
          echo "::group::Processing test results"
          echo "Checking for test reports"
          mkdir -p playwright-report test-results
          if [ -d "playwright-report" ]; then
            echo "Playwright report directory exists with content:"
            ls -la playwright-report/
          else
            echo "Playwright report directory not found, creating empty one"
          fi
          echo "::endgroup::"
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            playwright-report/
            test-results/
          retention-days: 30
          
      - name: Pipeline completed
        if: always()
        run: echo "::group::Pipeline completed" && echo "Test pipeline completed at $(date)" && echo "::endgroup::" 